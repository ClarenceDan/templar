name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run Pytest
        env:
          R2_GRADIENTS_ACCOUNT_ID: ${{ secrets.R2_GRADIENTS_ACCOUNT_ID }}
          R2_GRADIENTS_BUCKET_NAME: ${{ secrets.R2_GRADIENTS_BUCKET_NAME }}
          R2_GRADIENTS_READ_ACCESS_KEY_ID: ${{ secrets.R2_GRADIENTS_READ_ACCESS_KEY_ID }}
          R2_GRADIENTS_READ_SECRET_ACCESS_KEY: ${{ secrets.R2_GRADIENTS_READ_SECRET_ACCESS_KEY }}
          R2_GRADIENTS_WRITE_ACCESS_KEY_ID: ${{ secrets.R2_GRADIENTS_WRITE_ACCESS_KEY_ID }}
          R2_GRADIENTS_WRITE_SECRET_ACCESS_KEY: ${{ secrets.R2_GRADIENTS_WRITE_SECRET_ACCESS_KEY }}
          R2_DATASET_ACCOUNT_ID: ${{ secrets.R2_DATASET_ACCOUNT_ID }}
          R2_DATASET_BUCKET_NAME: ${{ secrets.R2_DATASET_BUCKET_NAME }}
          R2_DATASET_READ_ACCESS_KEY_ID: ${{ secrets.R2_DATASET_READ_ACCESS_KEY_ID }}
          R2_DATASET_READ_SECRET_ACCESS_KEY: ${{ secrets.R2_DATASET_READ_SECRET_ACCESS_KEY }}
          R2_DATASET_WRITE_ACCESS_KEY_ID: ${{ secrets.R2_DATASET_WRITE_ACCESS_KEY_ID }}
          R2_DATASET_WRITE_SECRET_ACCESS_KEY: ${{ secrets.R2_DATASET_WRITE_SECRET_ACCESS_KEY }}
        run: uv run pytest
